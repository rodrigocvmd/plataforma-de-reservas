generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id             Int           @id @default(autoincrement())
  name           String
  email          String        @unique
  password       String
  createdAt      DateTime      @default(now())
  Reservation    Reservation[]
  role           Role          @default(USER)
  ownedResources Resource[]
}

model Resource {
  id              Int               @id @default(autoincrement())
  title           String
  description     String
  isBlocked       Boolean           @default(false)
  createdAt       DateTime          @default(now())
  Reservation     Reservation[]
  Schedule        Schedule[]
  UnavailableSlot UnavailableSlot[]
  ownerId         Int // Chave estrangeira para o dono
  owner           User              @relation(fields: [ownerId], references: [id]) // Relação com User
}

model Reservation {
  id         Int      @id @default(autoincrement())
  userId     Int
  resourceId Int
  startTime  DateTime
  endTime    DateTime
  user       User     @relation(fields: [userId], references: [id])
  resource   Resource @relation(fields: [resourceId], references: [id])
}

model Schedule {
  id          Int      @id @default(autoincrement())
  resourceId  Int
  resource    Resource @relation(fields: [resourceId], references: [id])
  startTime   DateTime
  endTime     DateTime
  isAvailable Boolean  @default(false)
}

model UnavailableSlot {
  id         Int      @id @default(autoincrement())
  resourceId Int
  resource   Resource @relation(fields: [resourceId], references: [id])
  startTime  DateTime
  endTime    DateTime
}
